[{"/Users/abhash/Desktop/reactform/src/index.js":"1","/Users/abhash/Desktop/reactform/src/App.js":"2","/Users/abhash/Desktop/reactform/src/Form.js":"3","/Users/abhash/Desktop/reactform/src/useForm.js":"4","/Users/abhash/Desktop/reactform/src/validateinfo.js":"5","/Users/abhash/Desktop/reactform/src/FormSuccess.js":"6","/Users/abhash/Desktop/reactform/src/FormSignup.js":"7","/Users/abhash/Desktop/reactform/src/validateInfo.js":"8"},{"size":197,"mtime":1611765180865,"results":"9","hashOfConfig":"10"},{"size":133,"mtime":1611778881223,"results":"11","hashOfConfig":"10"},{"size":691,"mtime":1611779208168,"results":"12","hashOfConfig":"10"},{"size":789,"mtime":1611779146703,"results":"13","hashOfConfig":"10"},{"size":855,"mtime":1611779455877,"results":"14","hashOfConfig":"10"},{"size":324,"mtime":1611779091432,"results":"15","hashOfConfig":"10"},{"size":2397,"mtime":1611779626254,"results":"16","hashOfConfig":"10"},{"size":855,"mtime":1611779455877,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"trl9rg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/abhash/Desktop/reactform/src/index.js",[],["39","40"],"/Users/abhash/Desktop/reactform/src/App.js",[],"/Users/abhash/Desktop/reactform/src/Form.js",[],"/Users/abhash/Desktop/reactform/src/useForm.js",["41"],"import { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n      }\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;",["42","43"],"/Users/abhash/Desktop/reactform/src/validateinfo.js",[],"/Users/abhash/Desktop/reactform/src/FormSuccess.js",["44"],"import React from 'react';\nimport './Form.css';\n\nconst FormSuccess = () => {\n  return (\n    <div className='form-content-right'>\n      <h1 className='form-success'>We have received your request!</h1>\n      <img className='form-img-2' src='img/img-3.svg' alt='success-image' />\n    </div>\n  );\n};\n\nexport default FormSuccess;","/Users/abhash/Desktop/reactform/src/FormSignup.js",["45"],"import React from 'react';\nimport validate from './validateInfo';\nimport useForm from './useForm';\nimport './Form.css';\n\nconst FormSignup = ({ submitForm }) => {\n  const { handleChange, handleSubmit, values, errors } = useForm(\n    submitForm,\n    validate\n  );\n\n  return (\n    <div className='form-content-right'>\n      <form onSubmit={handleSubmit} className='form' noValidate>\n        <h1>\n          Get started with us today! Create your account by filling out the\n          information below.\n        </h1>\n        <div className='form-inputs'>\n          <label className='form-label'>Username</label>\n          <input\n            className='form-input'\n            type='text'\n            name='username'\n            placeholder='Enter your username'\n            value={values.username}\n            onChange={handleChange}\n          />\n          {errors.username && <p>{errors.username}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Email</label>\n          <input\n            className='form-input'\n            type='email'\n            name='email'\n            placeholder='Enter your email'\n            value={values.email}\n            onChange={handleChange}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Password</label>\n          <input\n            className='form-input'\n            type='password'\n            name='password'\n            placeholder='Enter your password'\n            value={values.password}\n            onChange={handleChange}\n          />\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n        <div className='form-inputs'>\n          <label className='form-label'>Confirm Password</label>\n          <input\n            className='form-input'\n            type='password'\n            name='password2'\n            placeholder='Confirm your password'\n            value={values.password2}\n            onChange={handleChange}\n          />\n          {errors.password2 && <p>{errors.password2}</p>}\n        </div>\n        <button className='form-input-btn' type='submit'>\n          Sign up\n        </button>\n        <span className='form-input-login'>\n          Already have an account? Login <a href='#'>here</a>\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default FormSignup;","/Users/abhash/Desktop/reactform/src/validateInfo.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":19,"nodeType":"52","messageId":"53","endLine":1,"endColumn":28},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":8,"column":7,"nodeType":"58","endLine":8,"endColumn":77},{"ruleId":"59","severity":1,"message":"60","line":71,"column":42,"nodeType":"58","endLine":71,"endColumn":54},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["61"],["62"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]